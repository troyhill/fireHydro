% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge_EDEN.R, R/read_EDEN.R, R/subset_EDEN.R,
%   R/write_EDEN.R
\name{merge.eden}
\alias{merge.eden}
\alias{read.eden}
\alias{subset.eden}
\alias{write.eden}
\title{Merge EDEN data}
\usage{
\method{merge}{eden}(x, y = NULL, ...)

read.eden(filename = "C:/RDATA/dataTest.tif")

subset.eden(x, subset, ...)

write.eden(x, filename)
}
\arguments{
\item{x}{EDEN object}

\item{y}{EDEN object}

\item{filename}{character. Output filename with or without a file extension; extension is ignored. two files are saved: (1) a geoTiff with the data, and (2) a text file with the dates. These are combined when loaded using `read.eden()`}

\item{subset}{integer, character (in %Y-%m-%d format), or Date. Should indicate the layers (represented as integer or by the corresponding date)}
}
\value{
a single `eden` object, which is a list with two elements: (1) the date(s) used, and (2) a spatial object with water levels (centimeters relative to soil surface) in the EDEN grid.

none

a single `eden` object, which is a list with two elements: (1) the date(s) used, and (2) a spatial object with water levels (centimeters relative to soil surface) in the EDEN grid.

none
}
\description{
Merge EDEN objects (lists with data and dates)

Load a saved EDEN object (list with data and dates). Returns an eden obeject with SpatRaster data.

Subset EDEN objects (lists with data and dates). Works only on SpatRaster data (raster data will be converted and returned as SpatRaster).

Write an EDEN object (list with data and dates) to a file. Works only on SpatRaster data (raster data will be converted to SpatRaster). Two files
}
\examples{

\dontrun{
dat1 <- getEDEN(EDEN_date = Sys.Date(), quarterly = TRUE, returnType = 'terra')
dat2 <- getEDEN(EDEN_date = Sys.Date()-95, quarterly = TRUE, returnType = 'terra')

dat3 <- merge(x = dat1, y = dat2)

dat1$date
dat2$date
dat3$date

}


\dontrun{
dat1 <- getEDEN(EDEN_date = "2022-01-01", quarterly = TRUE, returnType = 'terra')

write.eden(x = dat1, filename = "test_dat1.tif")
newdat <- read.eden("test_dat1.tif")

newdat

}


\dontrun{
dat1 <- getEDEN(EDEN_date = "2022-01-01", quarterly = TRUE, returnType = 'terra')

### subset by index
dat2 <- subset(x = dat1, subset = 5)

### subset by date
dat3 <- subset(x = dat1, subset = "2022-01-15")

### subset using date range
dateRange <- seq.Date(from = as.Date("2022-01-01"), 
                      to = as.Date("2022-01-15"), by = "day")
dat4 <- subset(x = dat1, subset = dateRange)

dat1$date
dat2$date
dat3$date
dat4$date

}


\dontrun{
dat1 <- getEDEN(EDEN_date = "2022-01-01", quarterly = TRUE, returnType = 'terra')

write.eden(x = dat1, filename = "test_dat1.tif")
newdat <- read.eden("test_dat1.tif")

newdat

}

}
